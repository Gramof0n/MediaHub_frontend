[{"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\App.js":"2","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\mainScreen.js":"4","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\comics.js":"5","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\allMedia.js":"6","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\books.js":"7","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\magazines.js":"8","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\movies.js":"9","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\series.js":"10","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\compNav.js":"11","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\dataOperations.js":"12","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\insertComic.js":"13","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\index.js":"14","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\App.js":"15","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\reportWebVitals.js":"16","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\mainScreen.js":"17","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\comics.js":"18","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\books.js":"19","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\allMedia.js":"20","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\series.js":"21","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\magazines.js":"22","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\movies.js":"23","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\insertComic.js":"24","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\dataOperations.js":"25","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\compNav.js":"26","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\dataOperationsBooks.js":"27","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\insertBook.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":1412,"mtime":1608416665244,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":1230,"mtime":1608146925777,"results":"33","hashOfConfig":"30"},{"size":1434,"mtime":1607516103198,"results":"34","hashOfConfig":"30"},{"size":188,"mtime":1607085940750,"results":"35","hashOfConfig":"30"},{"size":395,"mtime":1607116219986,"results":"36","hashOfConfig":"30"},{"size":399,"mtime":1607116238284,"results":"37","hashOfConfig":"30"},{"size":396,"mtime":1607116251637,"results":"38","hashOfConfig":"30"},{"size":397,"mtime":1607176209603,"results":"39","hashOfConfig":"30"},{"size":891,"mtime":1607132110252,"results":"40","hashOfConfig":"30"},{"size":12205,"mtime":1607528442676,"results":"41","hashOfConfig":"30"},{"size":3515,"mtime":1607532611523,"results":"42","hashOfConfig":"30"},{"size":500,"mtime":499162500000,"results":"43","hashOfConfig":"44"},{"size":1412,"mtime":1608416665244,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":1230,"mtime":1608146925777,"results":"47","hashOfConfig":"44"},{"size":1265,"mtime":1608743044362,"results":"48","hashOfConfig":"44"},{"size":1279,"mtime":1608924099009,"results":"49","hashOfConfig":"44"},{"size":188,"mtime":1607085940750,"results":"50","hashOfConfig":"44"},{"size":397,"mtime":1607176209603,"results":"51","hashOfConfig":"44"},{"size":399,"mtime":1607116238284,"results":"52","hashOfConfig":"44"},{"size":396,"mtime":1607116251637,"results":"53","hashOfConfig":"44"},{"size":4245,"mtime":1608924500101,"results":"54","hashOfConfig":"44"},{"size":12160,"mtime":1608840318123,"results":"55","hashOfConfig":"44"},{"size":891,"mtime":1607132110252,"results":"56","hashOfConfig":"44"},{"size":8827,"mtime":1608924311330,"results":"57","hashOfConfig":"44"},{"size":2450,"mtime":1608924491077,"results":"58","hashOfConfig":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"w9ioc9",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1yxv2fz",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\index.js",[],["125","126"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\App.js",["127"],"import './App.css';\nimport Nav from \"./components/mainScreen\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Comics from \"./components/comics\";\nimport Media from \"./components/allMedia\";\nimport Books from \"./components/books\";\nimport Magazines from \"./components/magazines\";\nimport Movies from \"./components/movies\";\nimport Series from \"./components/series\";\nimport logo from \"./img/logo.png\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"main\">\n        <div className=\"Header\">\n          <img src={logo}></img>\n          <h1>Media HUB</h1>\n        </div>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Nav} />\n            <Route path=\"/comics\" exact component={Comics} />\n            <Route path=\"/media\" exact component={Media} />\n            <Route path=\"/books\" exact component={Books} />\n            <Route path=\"/magazines\" exact component={Magazines} />\n            <Route path=\"/movies\" exact component={Movies} />\n            <Route path=\"/series\" exact component={Series} />\n          </Switch>\n        </div>\n        <div className=\"Footer\">\n          <ul>\n            <li>Azur Mujezinović</li>\n            <li>Nikola Milovanović</li>\n            <li>Emina Sokolović</li>\n            <li>Nikola Šubarić</li>\n          </ul>\n        </div>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\mainScreen.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\comics.js",["128","129","130","131","132"],"import { Component, useState } from 'react';\r\nimport '../mediaLayout.css';\r\nimport DataOperations from './dataOperations';\r\nimport InserComic from './insertComic';\r\n\r\n\r\nfunction Comics() {\r\n\r\n    const [comics, setComics] = useState(null);\r\n    const [data, showData] = useState(false);\r\n\r\n    const [showInsert, setShowInsert] = useState(false);\r\n\r\n    const showBrowsePage = async () => {\r\n        showData(true);\r\n        setShowInsert(false);\r\n    }\r\n\r\n    const showInsertPage = () =>{\r\n        showData(false);\r\n        setShowInsert(true);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"Content\">\r\n                <div className=\"NavBar\">\r\n                    <ul className=\"navItems\">\r\n                        <li className=\"navItem\" >\r\n                            <a onClick={() => showInsertPage()}>Insert a comic</a>\r\n                        </li>\r\n\r\n                        <li className=\"navItem\">\r\n                            <a onClick={() => showBrowsePage()} >Browse comics</a>\r\n                        </li>\r\n\r\n                        <li className=\"navItem\">\r\n                            <span>Comics</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {data && <DataOperations name=\"comic\"/>}\r\n                {showInsert && <InserComic/>}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Comics;","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\allMedia.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\books.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\magazines.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\movies.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\series.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\compNav.js",["133","134","135","136"],"import {Component} from 'react';\r\n\r\nclass compNav extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"NavBar\">\r\n            <ul className=\"navItems\">\r\n                <li className=\"navItem\" >\r\n                    <a>Insert a {this.props.name}</a>\r\n                </li>\r\n    \r\n                <li className=\"navItem\">\r\n                    <a>Modify a {this.props.name}</a>\r\n                </li>\r\n    \r\n                <li className=\"navItem\">\r\n                    <a>Recommend a {this.props.name}</a>\r\n                </li>\r\n    \r\n                <li className=\"navItem\">\r\n                    <a>Delete a {this.props.name}</a>\r\n                </li>\r\n                <li className=\"navItem\">\r\n                    <span >{this.props.name}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default compNav;","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\dataOperations.js",["137","138","139","140","141","142","143","144","145","146"],"import { useRef, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction DataOperations(props) {\r\n\r\n    const [showGenre, setShowGenre] = useState(false);\r\n    const [showPublisher, setShowPublisher] = useState(false);\r\n    const [showIssue, setShowIssue] = useState(false);\r\n    const [showTitle, setShowTitle] = useState(false);\r\n    const [showAll, setShowAll] = useState(false);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    const [comics, setComics] = useState(null);\r\n    const apiUrl = 'http://studentdocker.informatika.uni-mb.si:32832/comics';\r\n\r\n    const title = () => {\r\n        setShowTitle(true);\r\n        setShowGenre(false);\r\n        setShowPublisher(false);\r\n        setShowIssue(false);\r\n        setShowAll(false);\r\n        setShowEdit(false);\r\n    }\r\n\r\n    const genre = () => {\r\n        setShowGenre(true);\r\n        setShowPublisher(false);\r\n        setShowIssue(false);\r\n        setShowTitle(false);\r\n        setShowAll(false);\r\n        setShowEdit(false);\r\n    }\r\n\r\n    const publisher = () => {\r\n        setShowPublisher(true);\r\n        setShowGenre(false);\r\n        setShowIssue(false);\r\n        setShowTitle(false);\r\n        setShowAll(false);\r\n        setShowEdit(false);\r\n    }\r\n\r\n    const issue = () => {\r\n        setShowIssue(true);\r\n        setShowGenre(false);\r\n        setShowPublisher(false);\r\n        setShowTitle(false);\r\n        setShowAll(false);\r\n        setShowEdit(false);\r\n    }\r\n\r\n    const all = async () => {\r\n        setShowIssue(false);\r\n        setShowGenre(false);\r\n        setShowPublisher(false);\r\n        setShowTitle(false);\r\n        setShowEdit(false);\r\n\r\n        const response = await axios.get(apiUrl);\r\n        setComics(response.data);\r\n        setShowAll(true);\r\n    }\r\n\r\n\r\n\r\n    //SEARCH BY GENRE\r\n    const genreInput = useRef(null);\r\n    const searchByGenre = async () => {\r\n        var input = genreInput.current.value;\r\n        var urlEncoded = input.replaceAll(' ', '%20');\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/genre/' + urlEncoded);\r\n\r\n\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowGenre(false);\r\n        } else {\r\n            alert(\"No such genre\");\r\n        }\r\n\r\n    }\r\n\r\n    //SEARCH BY PUBLISHER\r\n    const publisherInput = useRef(null);\r\n    const searchByPublisher = async () => {\r\n        var input = publisherInput.current.value;\r\n        var urlEncoded = input.replaceAll(' ', '%20');\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/publisher/' + urlEncoded);\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowPublisher(false);\r\n        } else {\r\n            alert(\"No such publisher\");\r\n        }\r\n\r\n    }\r\n\r\n    //SEARCH BY ISSUE\r\n    const issueInput = useRef(null);\r\n    const searchByIssue = async () => {\r\n        var input = issueInput.current.value;\r\n\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/issue/' + input);\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowIssue(false);\r\n        } else {\r\n            alert(\"No such issue\");\r\n        }\r\n\r\n    }\r\n\r\n    //SEARCH BY TITLE\r\n    const titleInput = useRef(null);\r\n    const searchByTitle = async () => {\r\n        var input = titleInput.current.value;\r\n        var urlEncoded = input.replaceAll(' ', '%20');\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/title/' + urlEncoded);\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowTitle(false);\r\n        } else {\r\n            alert(\"No such title\");\r\n        }\r\n\r\n    }\r\n\r\n    //EDIT PARAMETERS\r\n    const idForEdit = useRef();\r\n    const titleRef = useRef();\r\n    const genreRef = useRef();\r\n    const authorNameRef = useRef();\r\n    const authorSurnameRef = useRef();\r\n    const publisherRef = useRef();\r\n    const dateRef = useRef();\r\n    const noOfPagesRef = useRef();\r\n    const issueRef = useRef();\r\n    const editParameters = async () => {\r\n        \r\n        const response = await axios.put('http://studentdocker.informatika.uni-mb.si:32832/comics/edit/' + idForEdit.current.value, { \r\n            title: titleRef.current.value, \r\n            genre: genreRef.current.value, \r\n            authors: [\r\n                {\r\n                    name:authorNameRef.current.value, \r\n                    surname: authorSurnameRef.current.value\r\n                }\r\n            ],\r\n            publisher: publisherRef.current.value,\r\n            date: dateRef.current.value,\r\n            noOfPages: noOfPagesRef.current.value,\r\n            issue: issueRef.current.value\r\n        });\r\n        if (response.data != null) {\r\n            all();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"DataDisplay\">\r\n            <ul className=\"sidebar\">\r\n                <li>\r\n                    <a onClick={() => title()} className=\"sidebarItem\">Search by title</a>\r\n\r\n                </li>\r\n                <li>\r\n                    <a onClick={() => genre()} className=\"sidebarItem\">Search by genre</a>\r\n\r\n                </li>\r\n                <li>\r\n                    <a onClick={() => publisher()} className=\"sidebarItem\">Search by publisher</a>\r\n                </li>\r\n                <li>\r\n                    <a onClick={() => issue()} className=\"sidebarItem\">Search by issue</a>\r\n                </li>\r\n                <li>\r\n                    <a onClick={() => all()} className=\"sidebarItem\">Display all comics</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"doStuff\">\r\n                {showGenre &&\r\n                    //OVO MOZES POMJERIT U ZASEBNU KOMPONENTU U MEDJUVREMENU. MISLIM DA NE TREBA NISTA PROSLJEDJIVAT\r\n\r\n                    //SEARCH BY GENRE\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert genre</h3>\r\n                        <input type=\"text\" className=\"inputGenre\" placeholder=\"Eg. mystery, horror, drama\" ref={genreInput} ></input>\r\n                        <button className=\"submit\" onClick={() => searchByGenre()}>Search</button>\r\n                    </div>\r\n                }\r\n\r\n                {showPublisher &&\r\n                    //SEARCH BY PUBLISHER\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert publisher</h3>\r\n                        <input type=\"text\" className=\"inputGenre\" placeholder=\"Eg. Marvel, DC comics, Dark horse\" ref={publisherInput}></input>\r\n                        <button className=\"submit\" onClick={() => searchByPublisher()}>Search</button>\r\n                    </div>\r\n                }\r\n\r\n                {showIssue &&\r\n                    //SEARCH BY ISSUE\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert edition</h3>\r\n                        <input type=\"number\" className=\"inputGenre\" placeholder=\"Eg. 1, 2, 3\" ref={issueInput}></input>\r\n                        <button className=\"submit\" onClick={() => searchByIssue()}>Search</button>\r\n                    </div>\r\n                }\r\n\r\n                {showTitle &&\r\n                    //SEARCH BY TITLE\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert title</h3>\r\n                        <input type=\"text\" className=\"inputGenre\" placeholder=\"Comic title goes here\" ref={titleInput}></input>\r\n                        <button className=\"submit\" onClick={() => searchByTitle()}>Search</button>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n                {showAll && comics.map((comic, index) => {\r\n                    //SHOW ALL COMICS\r\n\r\n                    //DELETE BY ID\r\n                    const deleteByID = async () => {\r\n                        const response = await axios.delete('http://studentdocker.informatika.uni-mb.si:32832/comics/delete/' + comic._id);\r\n                        all();\r\n                    }\r\n\r\n                    //EDIT BY ID\r\n                    const edit = async () => {\r\n                        setShowIssue(false);\r\n                        setShowGenre(false);\r\n                        setShowPublisher(false);\r\n                        setShowTitle(false);\r\n                        setShowAll(false);\r\n                        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/id/' + comic._id);\r\n                        setComics(response.data);\r\n\r\n                        setShowEdit(true);\r\n                    }\r\n\r\n                    return (\r\n                        <div className=\"itemContainer\">\r\n                            <div className=\"item\" key={comic._id}>\r\n                                <input value={comic._id} hidden=\"false\" readOnly={true}></input>\r\n                                <p><b>#{index + 1}</b></p>\r\n                                <p><b>Title:</b> {comic.title}</p>\r\n                                <p><b>Genre:</b> {comic.genre}</p>\r\n                                <p><b>Authors:</b> {comic.authors.map((author) => {\r\n                                    return (\r\n                                        <span>{author.name} {author.surname}</span>\r\n                                    );\r\n                                })}\r\n                                </p>\r\n                                <p><b>Publisher:</b> {comic.publisher}</p>\r\n                                <p><b>Date of publishing:</b> {comic.date}</p>\r\n                                <p><b>Number of pages:</b> {comic.noOfPages}</p>\r\n                                <p><b>Edition:</b> {comic.issue}</p>\r\n                                <div class=\"buttonContainer\">\r\n                                    <a onClick={() => deleteByID()} className=\"operations\">DELETE</a>\r\n                                    <a className=\"operations\" onClick={() => edit()}>EDIT</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {showEdit &&\r\n                    //EDIT A COMIC\r\n                    <div className=\"itemContainer\">\r\n                        <div className=\"item\">\r\n                            <input hidden=\"false\" value={comics._id} readOnly={true} ref={idForEdit}></input>\r\n                            <p><b>Title:</b> <input type=\"text\" defaultValue={comics.title} ref={titleRef} /></p>\r\n                            <p><b>Genre:</b> <input type=\"text\" defaultValue={comics.genre} ref={genreRef} /></p>\r\n                            <b>Author(s):</b> {comics.authors.map((author) => {\r\n                                return (\r\n                                    <div>\r\n\r\n                                        <p><b>Name:</b> <input type=\"text\" defaultValue={author.name} ref={authorNameRef} /></p>\r\n\r\n                                        <p><b>Surname:</b> <input type=\"text\" defaultValue={author.surname} ref={authorSurnameRef} /></p>\r\n\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                            <p><b>Publisher:</b> <input type=\"text\" defaultValue={comics.publisher} ref={publisherRef} /></p>\r\n                            <p><b>Date of publishing:</b> <input type=\"text\" defaultValue={comics.date} ref={dateRef} /></p>\r\n                            <p><b>Number of pages:</b> <input type=\"text\" defaultValue={comics.noOfPages} ref={noOfPagesRef} /></p>\r\n                            <p><b>Edition:</b> <input type=\"text\" defaultValue={comics.issue} ref={issueRef} /></p>\r\n                            <div class=\"buttonContainer\">\r\n                                <a className=\"operations\" onClick={() => all()}>BACK</a>\r\n                                <a className=\"operations\" onClick={() => editParameters()}>EDIT</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default DataOperations;","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend\\src\\components\\insertComic.js",["147","148","149","150","151","152"],"import axios from 'axios';\r\nimport { useState, useRef, useEffect } from 'react';\r\nfunction InsertComic() {\r\n\r\n    const titleRef = useRef();\r\n    const genreRef = useRef();\r\n    const authorNameRef = useRef();\r\n    const authorSurnameRef = useRef();\r\n    const publisherRef = useRef();\r\n    const dateRef = useRef();\r\n    const noOfPagesRef = useRef();\r\n    const issueRef = useRef();\r\n\r\n    const [noOfAuthors, setNoOfAuthors] = useState([]);\r\n    const [author, setAuthor] = useState([]);\r\n\r\n    const submit = () => {\r\n        author.push({\r\n            name: authorNameRef.current.value,\r\n            surname: authorSurnameRef.current.value\r\n        });\r\n\r\n    }\r\n    \r\n    const finalSubmit = () => {\r\n        submit();\r\n        insertData();\r\n        alert(JSON.stringify(author));\r\n    }\r\n    const addAuthor = () => {\r\n        setNoOfAuthors([...noOfAuthors, {\r\n            id: noOfAuthors.length,\r\n            value: 1\r\n        }]);\r\n\r\n        if (authorNameRef.current.value == \"\" && authorSurnameRef.current.value == \"\") {\r\n            submit();\r\n        }\r\n    }\r\n\r\n    const insertData = async () => {\r\n        const response = await axios.post('http://studentdocker.informatika.uni-mb.si:32832/comics/post', {\r\n            title: titleRef.current.value,\r\n            genre: genreRef.current.value,\r\n            authors: author,\r\n            publisher: publisherRef.current.value,\r\n            date: dateRef.current.value,\r\n            noOfPages: noOfPagesRef.current.value,\r\n            issue: issueRef.current.value\r\n        });\r\n\r\n        \r\n        alert(\"Inserted\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"itemContainerInsert\">\r\n            <div className=\"itemInsert\">\r\n                <form onSubmit={e => { e.preventDefault(); }}>\r\n                    <p><b>Title:</b></p> <div><input type=\"text\" ref={titleRef}  /></div><hr />\r\n                    <p><b>Genre:</b></p> <div><input type=\"text\" ref={genreRef}  /></div><hr />\r\n                    <div class=\"buttonContainer\">\r\n                        <a className=\"operations\" onClick={() => addAuthor()}>Add author</a>\r\n\r\n                    </div>\r\n                    <p><b>Author(s):</b></p>\r\n                    <div>\r\n                        <p><b>Name:</b> <input type=\"text\" ref={authorNameRef}  /> <b>Surname:</b> <input type=\"text\" ref={authorSurnameRef}  /></p>\r\n                    </div>\r\n\r\n                    {noOfAuthors.map(number => {\r\n                        return (\r\n                            <div key={number.id}>\r\n                                <p><b>Name:</b> <input type=\"text\" ref={authorNameRef}  /> <b>Surname:</b> <input type=\"text\" ref={authorSurnameRef}  /></p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    <hr />\r\n                    <p><b>Publisher:</b></p> <div><input type=\"text\" ref={publisherRef}  /></div><hr />\r\n                    <p><b>Date of publishing:</b></p> <div><input type=\"text\" ref={dateRef}  /></div><hr />\r\n                    <p><b>Number of pages:</b></p> <div><input type=\"text\" ref={noOfPagesRef}  /></div><hr />\r\n                    <p><b>Edition:</b> </p> <div><input type=\"text\" ref={issueRef}  /></div><hr />\r\n                    <div class=\"buttonContainer\">\r\n                        <input className=\"operations\" onClick={() => finalSubmit()} type=\"submit\" value=\"INSERT\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InsertComic;",["153","154"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\index.js",[],["155","156"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\App.js",["157"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\mainScreen.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\comics.js",["158","159"],"import { useState } from 'react';\r\nimport '../mediaLayout.css';\r\nimport DataOperations from './dataOperations';\r\nimport InserComic from './insertComic';\r\n\r\n\r\nfunction Comics() {\r\n\r\n    const [data, showData] = useState(true);\r\n\r\n    const [showInsert, setShowInsert] = useState(false);\r\n\r\n    const showBrowsePage = async () => {\r\n        showData(true);\r\n        setShowInsert(false);\r\n    }\r\n\r\n    const showInsertPage = () =>{\r\n        showData(false);\r\n        setShowInsert(true);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Container\">\r\n            <div className=\"Content\">\r\n                <div className=\"NavBar\">\r\n\r\n                    <ul className=\"navItems\">\r\n                        <li className=\"navItem\" >\r\n                            <a onClick={() => showInsertPage()}>Insert a comic</a>\r\n                        </li>\r\n\r\n                        <li className=\"navItem\">\r\n                            <a onClick={() => showBrowsePage()} >Browse comics</a>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                </div>\r\n                {data && <DataOperations name=\"comic\"/>}\r\n                {showInsert && <InserComic/>}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Comics;","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\books.js",["160","161"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\allMedia.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\series.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\magazines.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\movies.js",[],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\insertComic.js",["162","163","164","165","166","167","168"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\dataOperations.js",["169","170","171","172","173","174","175","176","177"],"import { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction DataOperations(props) {\r\n\r\n    const [showGenre, setShowGenre] = useState(false);\r\n    const [showPublisher, setShowPublisher] = useState(false);\r\n    const [showIssue, setShowIssue] = useState(false);\r\n    const [showTitle, setShowTitle] = useState(true);\r\n    const [showAll, setShowAll] = useState(false);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    const [comics, setComics] = useState(null);\r\n    const apiUrl = 'http://studentdocker.informatika.uni-mb.si:32832/comics';\r\n\r\n    useEffect(() => {\r\n        all();\r\n    }, []);\r\n\r\n    const all = async () => {\r\n        setShowIssue(false);\r\n        setShowGenre(false);\r\n        setShowPublisher(false);\r\n        setShowTitle(false);\r\n        setShowEdit(false);\r\n\r\n        const response = await axios.get(apiUrl);\r\n        setComics(response.data);\r\n        setShowAll(true);\r\n    }\r\n\r\n\r\n\r\n    //SEARCH BY GENRE\r\n    const genreInput = useRef(null);\r\n\r\n    const searchByGenre = async () => {\r\n        var input = genreInput.current.value;\r\n        var urlEncoded = input.replaceAll(' ', '%20');\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/genre/' + urlEncoded);\r\n\r\n\r\n\r\n        setComics(response.data);\r\n\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowGenre(false);\r\n\r\n            genreInput.current.value = \"\";\r\n        } else {\r\n            alert(\"No such genre\");\r\n\r\n            genreInput.current.value = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    //SEARCH BY PUBLISHER\r\n    const publisherInput = useRef(null);\r\n\r\n    const searchByPublisher = async () => {\r\n        var input = publisherInput.current.value;\r\n        var urlEncoded = input.replaceAll(' ', '%20');\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/publisher/' + urlEncoded);\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowPublisher(false);\r\n\r\n            publisherInput.current.value = \"\";\r\n        } else {\r\n            alert(\"No such publisher\");\r\n\r\n            publisherInput.current.value = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    //SEARCH BY ISSUE\r\n    const issueInput = useRef(null);\r\n\r\n    const searchByIssue = async () => {\r\n        var input = issueInput.current.value;\r\n\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/issue/' + input);\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowIssue(false);\r\n\r\n            issueInput.current.value = \"\";\r\n        } else {\r\n            alert(\"No such issue\");\r\n\r\n            issueInput.current.value = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    //SEARCH BY TITLE\r\n    const titleInput = useRef(null);\r\n\r\n    const searchByTitle = async () => {\r\n\r\n        var input = titleInput.current.value;\r\n        var urlEncoded = input.replaceAll(' ', '%20');\r\n        const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/title/' + urlEncoded);\r\n\r\n        setComics(response.data);\r\n        if (comics != null) {\r\n            setShowAll(true);\r\n            setShowTitle(false);\r\n\r\n            titleInput.current.value = \"\";\r\n        } else {\r\n            alert(\"No such title\");\r\n\r\n            titleInput.current.value = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    //EDIT PARAMETERS\r\n    const idForEdit = useRef();\r\n    const titleRef = useRef();\r\n    const genreRef = useRef();\r\n    const authorNameRef = useRef();\r\n    const authorSurnameRef = useRef();\r\n    const publisherRef = useRef();\r\n    const dateRef = useRef();\r\n    const noOfPagesRef = useRef();\r\n    const issueRef = useRef();\r\n    const editParameters = async () => {\r\n\r\n        const response = await axios.put('http://studentdocker.informatika.uni-mb.si:32832/comics/edit/' + idForEdit.current.value, {\r\n            title: titleRef.current.value,\r\n            genre: genreRef.current.value,\r\n            authors: [\r\n                {\r\n                    name: authorNameRef.current.value,\r\n                    surname: authorSurnameRef.current.value\r\n                }\r\n            ],\r\n            publisher: publisherRef.current.value,\r\n            date: dateRef.current.value,\r\n            noOfPages: noOfPagesRef.current.value,\r\n            issue: issueRef.current.value\r\n        });\r\n        if (response.data != null) {\r\n            all();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"DataDisplay\">\r\n\r\n            <div className=\"doStuff\">\r\n                <div className=\"stuffContainer\">\r\n                    <h1>Search by criteria</h1>\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert genre</h3>\r\n                        <input type=\"text\" className=\"inputGenre\" placeholder=\"Eg. mystery, horror, drama\" ref={genreInput} ></input>\r\n                        <button className=\"submit\" onClick={() => searchByGenre()}>Search</button>\r\n                    </div>\r\n\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert publisher</h3>\r\n                        <input type=\"text\" className=\"inputGenre\" placeholder=\"Eg. Marvel, DC comics, Dark horse\" ref={publisherInput}></input>\r\n                        <button className=\"submit\" onClick={() => searchByPublisher()}>Search</button>\r\n                    </div>\r\n\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert edition</h3>\r\n                        <input type=\"number\" className=\"inputGenre\" placeholder=\"Eg. 1, 2, 3\" ref={issueInput}></input>\r\n                        <button className=\"submit\" onClick={() => searchByIssue()}>Search</button>\r\n                    </div>\r\n\r\n                    <div className=\"stuff\">\r\n                        <h3>Insert title</h3>\r\n                        <input type=\"text\" className=\"inputGenre\" placeholder=\"Comic title goes here\" ref={titleInput}></input>\r\n                        <button className=\"submit\" onClick={() => searchByTitle()}>Search</button>\r\n                    </div>\r\n\r\n                    <div className=\"stuff\">\r\n                        <h3>Show all comics</h3>\r\n                        <button className=\"submit\" onClick={() => all()}>Show</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"tableContainer\">\r\n                    {showAll &&\r\n                        <table class=\"comicsTable\">\r\n                            <th>Number</th>\r\n                            <th>Title</th>\r\n                            <th>Genre</th>\r\n                            <th>Author(s)</th>\r\n                            <th>Publisher</th>\r\n                            <th>Date of publishing</th>\r\n                            <th>Number of pages</th>\r\n                            <th>Edition</th>\r\n                            <th></th>\r\n\r\n\r\n                            {showAll && comics.map((comic, index) => {\r\n                                //SHOW ALL COMICS\r\n\r\n                                //DELETE BY ID\r\n                                const deleteByID = async () => {\r\n                                    const response = await axios.delete('http://studentdocker.informatika.uni-mb.si:32832/comics/delete/' + comic._id);\r\n                                    all();\r\n                                }\r\n\r\n                                //EDIT BY ID\r\n                                const edit = async () => {\r\n                                    setShowAll(false);\r\n                                    const response = await axios.get('http://studentdocker.informatika.uni-mb.si:32832/comics/id/' + comic._id);\r\n                                    setComics(response.data);\r\n\r\n                                    setShowEdit(true);\r\n                                }\r\n\r\n                                return (\r\n\r\n                                    <tr className=\"item\" key={comic._id}>\r\n                                        <input value={comic._id} hidden=\"false\" readOnly={true}></input>\r\n                                        <td>{index + 1}</td>\r\n                                        <td> {comic.title}</td>\r\n                                        <td> {comic.genre}</td>\r\n                                        <td>{comic.authors.map((author) => {\r\n                                            return (\r\n                                                <span>{author.name} {author.surname}</span>\r\n                                            );\r\n                                        })}\r\n                                        </td>\r\n                                        <td>{comic.publisher}</td>\r\n                                        <td> {comic.date}</td>\r\n                                        <td> {comic.noOfPages}</td>\r\n                                        <td> {comic.issue}</td>\r\n                                        <td class=\"buttonContainer\">\r\n                                            <a onClick={() => deleteByID()} className=\"operations\">DELETE</a>\r\n                                            <a className=\"operations\" onClick={() => edit()}>EDIT</a>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            })}\r\n                        </table>\r\n\r\n                    }\r\n\r\n                    {showEdit &&\r\n                        //EDIT A COMIC\r\n                        <div className=\"itemContainer\">\r\n                            <h1>Edit a comic</h1>\r\n                            <div className=\"itemEdit\">\r\n                                <div className=\"firstSegment\">\r\n                                    <input hidden=\"false\" value={comics._id} readOnly={true} ref={idForEdit}></input>\r\n                                    <p><h3>Title:</h3> <input type=\"text\" defaultValue={comics.title} ref={titleRef} className=\"inputGenre\" /></p>\r\n                                    <p><h3>Genre:</h3> <input type=\"text\" defaultValue={comics.genre} ref={genreRef} className=\"inputGenre\" /></p>\r\n                                    <h3>Author(s):</h3><div className=\"authorContainer\"> {comics.authors.map((author) => {\r\n                                        return (\r\n                                            <div>\r\n\r\n                                                <p><b>Name:</b> <input type=\"text\" defaultValue={author.name} ref={authorNameRef} className=\"inputGenre\" /></p>\r\n\r\n                                                <p> <b>Surname:</b> <input type=\"text\" defaultValue={author.surname} ref={authorSurnameRef} className=\"inputGenre\" /></p>\r\n\r\n                                            </div>\r\n                                        );\r\n                                    })}</div>\r\n                                </div>\r\n                                <div className=\"secondSegment\">\r\n                                    <p><h3>Publisher:</h3> <input type=\"text\" defaultValue={comics.publisher} ref={publisherRef} className=\"inputGenre\" /></p>\r\n                                    <p><h3>Date of publishing:</h3> <input type=\"text\" defaultValue={comics.date} ref={dateRef} className=\"inputGenre\" /></p>\r\n                                    <p><h3>Number of pages:</h3> <input type=\"text\" defaultValue={comics.noOfPages} ref={noOfPagesRef} className=\"inputGenre\" /></p>\r\n                                    <p><h3>Edition:</h3> <input type=\"text\" defaultValue={comics.issue} ref={issueRef} className=\"inputGenre\" /></p>\r\n                                </div>\r\n                                <div class=\"buttonContainer\">\r\n                                    <a className=\"operations\" onClick={() => all()}>BACK</a>\r\n                                    <a className=\"operations\" onClick={() => editParameters()}>EDIT</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataOperations;","C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\compNav.js",["178","179","180","181"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\dataOperationsBooks.js",["182","183","184","185","186"],"C:\\Users\\User\\Desktop\\ITK_SEMESTAR1\\STORITVENO USMERJENE ARHITEKTURE\\projekt_frontend - Copy\\src\\components\\insertBook.js",["187","188","189","190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":17,"column":11,"nodeType":"197","endLine":17,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":19},{"ruleId":"198","severity":1,"message":"202","line":9,"column":12,"nodeType":"200","messageId":"201","endLine":9,"endColumn":18},{"ruleId":"198","severity":1,"message":"203","line":9,"column":20,"nodeType":"200","messageId":"201","endLine":9,"endColumn":29},{"ruleId":"204","severity":1,"message":"205","line":30,"column":29,"nodeType":"197","endLine":30,"endColumn":65},{"ruleId":"204","severity":1,"message":"205","line":34,"column":29,"nodeType":"197","endLine":34,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":10,"column":21,"nodeType":"197","endLine":10,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":14,"column":21,"nodeType":"197","endLine":14,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":18,"column":21,"nodeType":"197","endLine":18,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":22,"column":21,"nodeType":"197","endLine":22,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":172,"column":21,"nodeType":"197","endLine":172,"endColumn":72},{"ruleId":"204","severity":1,"message":"205","line":176,"column":21,"nodeType":"197","endLine":176,"endColumn":72},{"ruleId":"204","severity":1,"message":"205","line":180,"column":21,"nodeType":"197","endLine":180,"endColumn":76},{"ruleId":"204","severity":1,"message":"205","line":183,"column":21,"nodeType":"197","endLine":183,"endColumn":72},{"ruleId":"204","severity":1,"message":"205","line":186,"column":21,"nodeType":"197","endLine":186,"endColumn":70},{"ruleId":"198","severity":1,"message":"206","line":235,"column":31,"nodeType":"200","messageId":"201","endLine":235,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":270,"column":37,"nodeType":"197","endLine":270,"endColumn":92},{"ruleId":"204","severity":1,"message":"205","line":271,"column":37,"nodeType":"197","endLine":271,"endColumn":86},{"ruleId":"204","severity":1,"message":"205","line":301,"column":33,"nodeType":"197","endLine":301,"endColumn":81},{"ruleId":"204","severity":1,"message":"205","line":302,"column":33,"nodeType":"197","endLine":302,"endColumn":92},{"ruleId":"198","severity":1,"message":"207","line":2,"column":28,"nodeType":"200","messageId":"201","endLine":2,"endColumn":37},{"ruleId":"198","severity":1,"message":"208","line":15,"column":20,"nodeType":"200","messageId":"201","endLine":15,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":36,"column":41,"nodeType":"211","messageId":"212","endLine":36,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":36,"column":81,"nodeType":"211","messageId":"212","endLine":36,"endColumn":83},{"ruleId":"198","severity":1,"message":"206","line":42,"column":15,"nodeType":"200","messageId":"201","endLine":42,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":63,"column":25,"nodeType":"197","endLine":63,"endColumn":79},{"ruleId":"191","replacedBy":"213"},{"ruleId":"193","replacedBy":"214"},{"ruleId":"191","replacedBy":"215"},{"ruleId":"193","replacedBy":"216"},{"ruleId":"195","severity":1,"message":"196","line":17,"column":11,"nodeType":"197","endLine":17,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":30,"column":29,"nodeType":"197","endLine":30,"endColumn":65},{"ruleId":"204","severity":1,"message":"205","line":34,"column":29,"nodeType":"197","endLine":34,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":28,"column":29,"nodeType":"197","endLine":28,"endColumn":65},{"ruleId":"204","severity":1,"message":"205","line":32,"column":29,"nodeType":"197","endLine":32,"endColumn":66},{"ruleId":"198","severity":1,"message":"207","line":2,"column":28,"nodeType":"200","messageId":"201","endLine":2,"endColumn":37},{"ruleId":"198","severity":1,"message":"208","line":17,"column":20,"nodeType":"200","messageId":"201","endLine":17,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":37,"column":41,"nodeType":"211","messageId":"212","endLine":37,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":37,"column":81,"nodeType":"211","messageId":"212","endLine":37,"endColumn":83},{"ruleId":"198","severity":1,"message":"206","line":43,"column":15,"nodeType":"200","messageId":"201","endLine":43,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":64,"column":69,"nodeType":"197","endLine":64,"endColumn":123},{"ruleId":"195","severity":1,"message":"196","line":103,"column":21,"nodeType":"197","endLine":103,"endColumn":38},{"ruleId":"198","severity":1,"message":"217","line":6,"column":12,"nodeType":"200","messageId":"201","endLine":6,"endColumn":21},{"ruleId":"198","severity":1,"message":"218","line":7,"column":12,"nodeType":"200","messageId":"201","endLine":7,"endColumn":25},{"ruleId":"198","severity":1,"message":"219","line":8,"column":12,"nodeType":"200","messageId":"201","endLine":8,"endColumn":21},{"ruleId":"198","severity":1,"message":"220","line":9,"column":12,"nodeType":"200","messageId":"201","endLine":9,"endColumn":21},{"ruleId":"198","severity":1,"message":"206","line":214,"column":43,"nodeType":"200","messageId":"201","endLine":214,"endColumn":51},{"ruleId":"204","severity":1,"message":"205","line":245,"column":45,"nodeType":"197","endLine":245,"endColumn":100},{"ruleId":"204","severity":1,"message":"205","line":246,"column":45,"nodeType":"197","endLine":246,"endColumn":94},{"ruleId":"204","severity":1,"message":"205","line":284,"column":37,"nodeType":"197","endLine":284,"endColumn":85},{"ruleId":"204","severity":1,"message":"205","line":285,"column":37,"nodeType":"197","endLine":285,"endColumn":96},{"ruleId":"204","severity":1,"message":"205","line":10,"column":21,"nodeType":"197","endLine":10,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":14,"column":21,"nodeType":"197","endLine":14,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":18,"column":21,"nodeType":"197","endLine":18,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":22,"column":21,"nodeType":"197","endLine":22,"endColumn":24},{"ruleId":"198","severity":1,"message":"206","line":172,"column":39,"nodeType":"200","messageId":"201","endLine":172,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":197,"column":41,"nodeType":"197","endLine":197,"endColumn":96},{"ruleId":"204","severity":1,"message":"205","line":198,"column":41,"nodeType":"197","endLine":198,"endColumn":90},{"ruleId":"204","severity":1,"message":"205","line":225,"column":33,"nodeType":"197","endLine":225,"endColumn":81},{"ruleId":"204","severity":1,"message":"205","line":226,"column":33,"nodeType":"197","endLine":226,"endColumn":92},{"ruleId":"198","severity":1,"message":"221","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":18},{"ruleId":"198","severity":1,"message":"207","line":2,"column":28,"nodeType":"200","messageId":"201","endLine":2,"endColumn":37},{"ruleId":"198","severity":1,"message":"206","line":16,"column":19,"nodeType":"200","messageId":"201","endLine":16,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":55,"column":21,"nodeType":"197","endLine":55,"endColumn":39},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'comics' is assigned a value but never used.","'setComics' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'response' is assigned a value but never used.","'useEffect' is defined but never used.","'setAuthor' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["222"],["223"],["222"],["223"],"'showGenre' is assigned a value but never used.","'showPublisher' is assigned a value but never used.","'showIssue' is assigned a value but never used.","'showTitle' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]